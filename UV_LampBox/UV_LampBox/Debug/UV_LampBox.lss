
UV_LampBox.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000482  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000004f6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004f6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000528  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012dc  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000882  00000000  00000000  000018b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000069a  00000000  00000000  00002136  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  000027d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000414  00000000  00000000  00002870  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000095  00000000  00000000  00002c84  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002d19  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 56 00 	jmp	0xac	; 0xac <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 08 01 	call	0x210	; 0x210 <main>
  88:	0c 94 3f 02 	jmp	0x47e	; 0x47e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <init_interrupt_200ms>:

// 10 ms timer
void init_interrupt_200ms()
{
	// Set the Timer Mode to CTC
	TCCR0A |= (1 << WGM01);
  90:	84 b5       	in	r24, 0x24	; 36
  92:	82 60       	ori	r24, 0x02	; 2
  94:	84 bd       	out	0x24, r24	; 36

	// Set the value that you want to count to
	OCR0A = 0x26;
  96:	86 e2       	ldi	r24, 0x26	; 38
  98:	87 bd       	out	0x27, r24	; 39

	TIMSK0 |= (1 << OCIE0A);    //Set the ISR COMPA vector
  9a:	ee e6       	ldi	r30, 0x6E	; 110
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	80 81       	ld	r24, Z
  a0:	82 60       	ori	r24, 0x02	; 2
  a2:	80 83       	st	Z, r24

	TCCR0B |= (1 << CS02);
  a4:	85 b5       	in	r24, 0x25	; 37
  a6:	84 60       	ori	r24, 0x04	; 4
  a8:	85 bd       	out	0x25, r24	; 37
  aa:	08 95       	ret

000000ac <__vector_14>:
	// set prescaler to 256 and start the timer
}

ISR (TIMER0_COMPA_vect)  // timer0 overflow interrupt
{
  ac:	1f 92       	push	r1
  ae:	0f 92       	push	r0
  b0:	0f b6       	in	r0, 0x3f	; 63
  b2:	0f 92       	push	r0
  b4:	11 24       	eor	r1, r1
  b6:	8f 93       	push	r24
  b8:	9f 93       	push	r25
	//event to be executed every 10ms here
	counter ++;
  ba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  be:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  c2:	01 96       	adiw	r24, 0x01	; 1
  c4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  c8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	if(counter >= 100)
  cc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  d0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  d4:	84 36       	cpi	r24, 0x64	; 100
  d6:	91 05       	cpc	r25, r1
  d8:	44 f0       	brlt	.+16     	; 0xea <__vector_14+0x3e>
	{
		counter = 0;
  da:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
  de:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		
		PORTC ^= 1 << 0;
  e2:	98 b1       	in	r25, 0x08	; 8
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	89 27       	eor	r24, r25
  e8:	88 b9       	out	0x08, r24	; 8
	}
}
  ea:	9f 91       	pop	r25
  ec:	8f 91       	pop	r24
  ee:	0f 90       	pop	r0
  f0:	0f be       	out	0x3f, r0	; 63
  f2:	0f 90       	pop	r0
  f4:	1f 90       	pop	r1
  f6:	18 95       	reti

000000f8 <put_Char_LCD_Display>:
#define MAX_CHARS_PER_ROW 16
#define LCD_DELAY_MS 10

void put_Char_LCD_Display(int ch, int type)
{
	PORTD = (PORTD&0x0F)|(ch&0xF0);
  f8:	2b b1       	in	r18, 0x0b	; 11
  fa:	38 2f       	mov	r19, r24
  fc:	30 7f       	andi	r19, 0xF0	; 240
  fe:	2f 70       	andi	r18, 0x0F	; 15
 100:	23 2b       	or	r18, r19
 102:	2b b9       	out	0x0b, r18	; 11
	PORTD = (PORTD&0xFE)|(type&0x01);
 104:	2b b1       	in	r18, 0x0b	; 11
 106:	61 70       	andi	r22, 0x01	; 1
 108:	2e 7f       	andi	r18, 0xFE	; 254
 10a:	26 2b       	or	r18, r22
 10c:	2b b9       	out	0x0b, r18	; 11
	PORTD = PORTD|0x02;
 10e:	59 9a       	sbi	0x0b, 1	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 110:	e3 ec       	ldi	r30, 0xC3	; 195
 112:	f9 e0       	ldi	r31, 0x09	; 9
 114:	31 97       	sbiw	r30, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <put_Char_LCD_Display+0x1c>
 118:	00 c0       	rjmp	.+0      	; 0x11a <put_Char_LCD_Display+0x22>
 11a:	00 00       	nop
	_delay_ms(LCD_DELAY_MS);
	PORTD &= 0xFC;
 11c:	2b b1       	in	r18, 0x0b	; 11
 11e:	2c 7f       	andi	r18, 0xFC	; 252
 120:	2b b9       	out	0x0b, r18	; 11
	PORTD = (PORTD&0x0F)|((ch<<4)&0xF0);
 122:	2b b1       	in	r18, 0x0b	; 11
 124:	82 95       	swap	r24
 126:	92 95       	swap	r25
 128:	90 7f       	andi	r25, 0xF0	; 240
 12a:	98 27       	eor	r25, r24
 12c:	80 7f       	andi	r24, 0xF0	; 240
 12e:	98 27       	eor	r25, r24
 130:	92 2f       	mov	r25, r18
 132:	9f 70       	andi	r25, 0x0F	; 15
 134:	89 2b       	or	r24, r25
 136:	8b b9       	out	0x0b, r24	; 11
	PORTD = (PORTD&0xFE)|(type&0x01);
 138:	8b b1       	in	r24, 0x0b	; 11
 13a:	8e 7f       	andi	r24, 0xFE	; 254
 13c:	68 2b       	or	r22, r24
 13e:	6b b9       	out	0x0b, r22	; 11
	PORTD = PORTD|0x02;
 140:	59 9a       	sbi	0x0b, 1	; 11
 142:	83 ec       	ldi	r24, 0xC3	; 195
 144:	99 e0       	ldi	r25, 0x09	; 9
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <put_Char_LCD_Display+0x4e>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <put_Char_LCD_Display+0x54>
 14c:	00 00       	nop
	_delay_ms(LCD_DELAY_MS);
	PORTD &= 0xFC;
 14e:	8b b1       	in	r24, 0x0b	; 11
 150:	8c 7f       	andi	r24, 0xFC	; 252
 152:	8b b9       	out	0x0b, r24	; 11
 154:	08 95       	ret

00000156 <init_LCD_Display>:
}

void init_LCD_Display(void)
{
	DDRD = 0xFF;
 156:	8f ef       	ldi	r24, 0xFF	; 255
 158:	8a b9       	out	0x0a, r24	; 10
	put_Char_LCD_Display(0x38,0);
 15a:	60 e0       	ldi	r22, 0x00	; 0
 15c:	70 e0       	ldi	r23, 0x00	; 0
 15e:	88 e3       	ldi	r24, 0x38	; 56
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
 166:	83 ec       	ldi	r24, 0xC3	; 195
 168:	99 e0       	ldi	r25, 0x09	; 9
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <init_LCD_Display+0x14>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <init_LCD_Display+0x1a>
 170:	00 00       	nop
	_delay_ms(LCD_DELAY_MS);
	put_Char_LCD_Display(0x38,0);
 172:	60 e0       	ldi	r22, 0x00	; 0
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	88 e3       	ldi	r24, 0x38	; 56
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
 17e:	83 ec       	ldi	r24, 0xC3	; 195
 180:	99 e0       	ldi	r25, 0x09	; 9
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <init_LCD_Display+0x2c>
 186:	00 c0       	rjmp	.+0      	; 0x188 <init_LCD_Display+0x32>
 188:	00 00       	nop
	_delay_ms(LCD_DELAY_MS);
	put_Char_LCD_Display(0x38,0);
 18a:	60 e0       	ldi	r22, 0x00	; 0
 18c:	70 e0       	ldi	r23, 0x00	; 0
 18e:	88 e3       	ldi	r24, 0x38	; 56
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
 196:	83 ec       	ldi	r24, 0xC3	; 195
 198:	99 e0       	ldi	r25, 0x09	; 9
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <init_LCD_Display+0x44>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <init_LCD_Display+0x4a>
 1a0:	00 00       	nop
	_delay_ms(LCD_DELAY_MS);
	put_Char_LCD_Display(0x02,0);
 1a2:	60 e0       	ldi	r22, 0x00	; 0
 1a4:	70 e0       	ldi	r23, 0x00	; 0
 1a6:	82 e0       	ldi	r24, 0x02	; 2
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
 1ae:	83 ec       	ldi	r24, 0xC3	; 195
 1b0:	99 e0       	ldi	r25, 0x09	; 9
 1b2:	01 97       	sbiw	r24, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <init_LCD_Display+0x5c>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <init_LCD_Display+0x62>
 1b8:	00 00       	nop
	_delay_ms(LCD_DELAY_MS);
	put_Char_LCD_Display(0x0C,0);
 1ba:	60 e0       	ldi	r22, 0x00	; 0
 1bc:	70 e0       	ldi	r23, 0x00	; 0
 1be:	8c e0       	ldi	r24, 0x0C	; 12
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
 1c6:	83 ec       	ldi	r24, 0xC3	; 195
 1c8:	99 e0       	ldi	r25, 0x09	; 9
 1ca:	01 97       	sbiw	r24, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <init_LCD_Display+0x74>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <init_LCD_Display+0x7a>
 1d0:	00 00       	nop
	_delay_ms(LCD_DELAY_MS);
	put_Char_LCD_Display(0x01,0);
 1d2:	60 e0       	ldi	r22, 0x00	; 0
 1d4:	70 e0       	ldi	r23, 0x00	; 0
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
 1de:	83 ec       	ldi	r24, 0xC3	; 195
 1e0:	99 e0       	ldi	r25, 0x09	; 9
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <init_LCD_Display+0x8c>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <init_LCD_Display+0x92>
 1e8:	00 00       	nop
	_delay_ms(LCD_DELAY_MS);
	put_Char_LCD_Display(0x80,0);
 1ea:	60 e0       	ldi	r22, 0x00	; 0
 1ec:	70 e0       	ldi	r23, 0x00	; 0
 1ee:	80 e8       	ldi	r24, 0x80	; 128
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
 1f6:	83 ec       	ldi	r24, 0xC3	; 195
 1f8:	99 e0       	ldi	r25, 0x09	; 9
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <init_LCD_Display+0xa4>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <init_LCD_Display+0xaa>
 200:	00 00       	nop
	_delay_ms(LCD_DELAY_MS);
	put_Char_LCD_Display(0x01,0);//clear display
 202:	60 e0       	ldi	r22, 0x00	; 0
 204:	70 e0       	ldi	r23, 0x00	; 0
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
 20e:	08 95       	ret

00000210 <main>:


int main(void)
{
    /* Replace with your application code */
	init_interrupt_200ms();
 210:	0e 94 48 00 	call	0x90	; 0x90 <init_interrupt_200ms>
	DDRC |= 1 << 0;
 214:	38 9a       	sbi	0x07, 0	; 7
	PORTC |= 1 << 0;
 216:	40 9a       	sbi	0x08, 0	; 8
 218:	8f e4       	ldi	r24, 0x4F	; 79
 21a:	93 ec       	ldi	r25, 0xC3	; 195
 21c:	01 97       	sbiw	r24, 0x01	; 1
 21e:	f1 f7       	brne	.-4      	; 0x21c <main+0xc>
 220:	00 c0       	rjmp	.+0      	; 0x222 <main+0x12>
 222:	00 00       	nop
	_delay_ms(200);
	init_LCD_Display();
 224:	0e 94 ab 00 	call	0x156	; 0x156 <init_LCD_Display>
 228:	9f e7       	ldi	r25, 0x7F	; 127
 22a:	29 ea       	ldi	r18, 0xA9	; 169
 22c:	83 e0       	ldi	r24, 0x03	; 3
 22e:	91 50       	subi	r25, 0x01	; 1
 230:	20 40       	sbci	r18, 0x00	; 0
 232:	80 40       	sbci	r24, 0x00	; 0
 234:	e1 f7       	brne	.-8      	; 0x22e <main+0x1e>
 236:	00 c0       	rjmp	.+0      	; 0x238 <main+0x28>
 238:	00 00       	nop
	_delay_ms(1200);
	put_Char_LCD_Display('I', 1);
 23a:	61 e0       	ldi	r22, 0x01	; 1
 23c:	70 e0       	ldi	r23, 0x00	; 0
 23e:	89 e4       	ldi	r24, 0x49	; 73
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('n', 1);
 246:	61 e0       	ldi	r22, 0x01	; 1
 248:	70 e0       	ldi	r23, 0x00	; 0
 24a:	8e e6       	ldi	r24, 0x6E	; 110
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('i', 1);
 252:	61 e0       	ldi	r22, 0x01	; 1
 254:	70 e0       	ldi	r23, 0x00	; 0
 256:	89 e6       	ldi	r24, 0x69	; 105
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('t', 1);
 25e:	61 e0       	ldi	r22, 0x01	; 1
 260:	70 e0       	ldi	r23, 0x00	; 0
 262:	84 e7       	ldi	r24, 0x74	; 116
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('i', 1);
 26a:	61 e0       	ldi	r22, 0x01	; 1
 26c:	70 e0       	ldi	r23, 0x00	; 0
 26e:	89 e6       	ldi	r24, 0x69	; 105
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('a', 1);
 276:	61 e0       	ldi	r22, 0x01	; 1
 278:	70 e0       	ldi	r23, 0x00	; 0
 27a:	81 e6       	ldi	r24, 0x61	; 97
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('l', 1);
 282:	61 e0       	ldi	r22, 0x01	; 1
 284:	70 e0       	ldi	r23, 0x00	; 0
 286:	8c e6       	ldi	r24, 0x6C	; 108
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('i', 1);
 28e:	61 e0       	ldi	r22, 0x01	; 1
 290:	70 e0       	ldi	r23, 0x00	; 0
 292:	89 e6       	ldi	r24, 0x69	; 105
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('z', 1);
 29a:	61 e0       	ldi	r22, 0x01	; 1
 29c:	70 e0       	ldi	r23, 0x00	; 0
 29e:	8a e7       	ldi	r24, 0x7A	; 122
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('i', 1);
 2a6:	61 e0       	ldi	r22, 0x01	; 1
 2a8:	70 e0       	ldi	r23, 0x00	; 0
 2aa:	89 e6       	ldi	r24, 0x69	; 105
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('n', 1);
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	70 e0       	ldi	r23, 0x00	; 0
 2b6:	8e e6       	ldi	r24, 0x6E	; 110
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('g', 1);
 2be:	61 e0       	ldi	r22, 0x01	; 1
 2c0:	70 e0       	ldi	r23, 0x00	; 0
 2c2:	87 e6       	ldi	r24, 0x67	; 103
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('.', 1);
 2ca:	61 e0       	ldi	r22, 0x01	; 1
 2cc:	70 e0       	ldi	r23, 0x00	; 0
 2ce:	8e e2       	ldi	r24, 0x2E	; 46
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('.', 1);
 2d6:	61 e0       	ldi	r22, 0x01	; 1
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	8e e2       	ldi	r24, 0x2E	; 46
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('.', 1);
 2e2:	61 e0       	ldi	r22, 0x01	; 1
 2e4:	70 e0       	ldi	r23, 0x00	; 0
 2e6:	8e e2       	ldi	r24, 0x2E	; 46
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	sei();
 2ee:	78 94       	sei
 2f0:	9f e3       	ldi	r25, 0x3F	; 63
 2f2:	2d e0       	ldi	r18, 0x0D	; 13
 2f4:	83 e0       	ldi	r24, 0x03	; 3
 2f6:	91 50       	subi	r25, 0x01	; 1
 2f8:	20 40       	sbci	r18, 0x00	; 0
 2fa:	80 40       	sbci	r24, 0x00	; 0
 2fc:	e1 f7       	brne	.-8      	; 0x2f6 <main+0xe6>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0xf0>
 300:	00 00       	nop
	
	_delay_ms(1000);
	put_Char_LCD_Display(0x01,0);//clear display
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	
	put_Char_LCD_Display(0x80, 0);
 30e:	60 e0       	ldi	r22, 0x00	; 0
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	80 e8       	ldi	r24, 0x80	; 128
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('S', 1);
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	83 e5       	ldi	r24, 0x53	; 83
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('c', 1);
 326:	61 e0       	ldi	r22, 0x01	; 1
 328:	70 e0       	ldi	r23, 0x00	; 0
 32a:	83 e6       	ldi	r24, 0x63	; 99
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('o', 1);
 332:	61 e0       	ldi	r22, 0x01	; 1
 334:	70 e0       	ldi	r23, 0x00	; 0
 336:	8f e6       	ldi	r24, 0x6F	; 111
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('r', 1);
 33e:	61 e0       	ldi	r22, 0x01	; 1
 340:	70 e0       	ldi	r23, 0x00	; 0
 342:	82 e7       	ldi	r24, 0x72	; 114
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('p', 1);
 34a:	61 e0       	ldi	r22, 0x01	; 1
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	80 e7       	ldi	r24, 0x70	; 112
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('i', 1);
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	89 e6       	ldi	r24, 0x69	; 105
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('o', 1);
 362:	61 e0       	ldi	r22, 0x01	; 1
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	8f e6       	ldi	r24, 0x6F	; 111
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('n', 1);
 36e:	61 e0       	ldi	r22, 0x01	; 1
 370:	70 e0       	ldi	r23, 0x00	; 0
 372:	8e e6       	ldi	r24, 0x6E	; 110
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('I', 1);
 37a:	61 e0       	ldi	r22, 0x01	; 1
 37c:	70 e0       	ldi	r23, 0x00	; 0
 37e:	89 e4       	ldi	r24, 0x49	; 73
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('P', 1);
 386:	61 e0       	ldi	r22, 0x01	; 1
 388:	70 e0       	ldi	r23, 0x00	; 0
 38a:	80 e5       	ldi	r24, 0x50	; 80
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('X', 1);
 392:	61 e0       	ldi	r22, 0x01	; 1
 394:	70 e0       	ldi	r23, 0x00	; 0
 396:	88 e5       	ldi	r24, 0x58	; 88
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	
	put_Char_LCD_Display(0xC0, 0);
 39e:	60 e0       	ldi	r22, 0x00	; 0
 3a0:	70 e0       	ldi	r23, 0x00	; 0
 3a2:	80 ec       	ldi	r24, 0xC0	; 192
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('U', 1);
 3aa:	61 e0       	ldi	r22, 0x01	; 1
 3ac:	70 e0       	ldi	r23, 0x00	; 0
 3ae:	85 e5       	ldi	r24, 0x55	; 85
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('V', 1);
 3b6:	61 e0       	ldi	r22, 0x01	; 1
 3b8:	70 e0       	ldi	r23, 0x00	; 0
 3ba:	86 e5       	ldi	r24, 0x56	; 86
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display(' ', 1);
 3c2:	61 e0       	ldi	r22, 0x01	; 1
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	80 e2       	ldi	r24, 0x20	; 32
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('L', 1);
 3ce:	61 e0       	ldi	r22, 0x01	; 1
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	8c e4       	ldi	r24, 0x4C	; 76
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('i', 1);
 3da:	61 e0       	ldi	r22, 0x01	; 1
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	89 e6       	ldi	r24, 0x69	; 105
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('g', 1);
 3e6:	61 e0       	ldi	r22, 0x01	; 1
 3e8:	70 e0       	ldi	r23, 0x00	; 0
 3ea:	87 e6       	ldi	r24, 0x67	; 103
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('h', 1);
 3f2:	61 e0       	ldi	r22, 0x01	; 1
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	88 e6       	ldi	r24, 0x68	; 104
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('t', 1);
 3fe:	61 e0       	ldi	r22, 0x01	; 1
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	84 e7       	ldi	r24, 0x74	; 116
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('B', 1);
 40a:	61 e0       	ldi	r22, 0x01	; 1
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	82 e4       	ldi	r24, 0x42	; 66
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('o', 1);
 416:	61 e0       	ldi	r22, 0x01	; 1
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	8f e6       	ldi	r24, 0x6F	; 111
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('x', 1);
 422:	61 e0       	ldi	r22, 0x01	; 1
 424:	70 e0       	ldi	r23, 0x00	; 0
 426:	88 e7       	ldi	r24, 0x78	; 120
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display(' ', 1);
 42e:	61 e0       	ldi	r22, 0x01	; 1
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	80 e2       	ldi	r24, 0x20	; 32
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('v', 1);
 43a:	61 e0       	ldi	r22, 0x01	; 1
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	86 e7       	ldi	r24, 0x76	; 118
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('1', 1);
 446:	61 e0       	ldi	r22, 0x01	; 1
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	81 e3       	ldi	r24, 0x31	; 49
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('.', 1);
 452:	61 e0       	ldi	r22, 0x01	; 1
 454:	70 e0       	ldi	r23, 0x00	; 0
 456:	8e e2       	ldi	r24, 0x2E	; 46
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
	put_Char_LCD_Display('0', 1);
 45e:	61 e0       	ldi	r22, 0x01	; 1
 460:	70 e0       	ldi	r23, 0x00	; 0
 462:	80 e3       	ldi	r24, 0x30	; 48
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 7c 00 	call	0xf8	; 0xf8 <put_Char_LCD_Display>
 46a:	9f e3       	ldi	r25, 0x3F	; 63
 46c:	2d e0       	ldi	r18, 0x0D	; 13
 46e:	83 e0       	ldi	r24, 0x03	; 3
 470:	91 50       	subi	r25, 0x01	; 1
 472:	20 40       	sbci	r18, 0x00	; 0
 474:	80 40       	sbci	r24, 0x00	; 0
 476:	e1 f7       	brne	.-8      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 478:	00 c0       	rjmp	.+0      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 47a:	00 00       	nop
		/*_delay_ms(100);
		PORTC ^= 1 << 0;
		_delay_ms(5000);
		PORTC ^= 1 << 0;*/
		
    }
 47c:	ff cf       	rjmp	.-2      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>

0000047e <_exit>:
 47e:	f8 94       	cli

00000480 <__stop_program>:
 480:	ff cf       	rjmp	.-2      	; 0x480 <__stop_program>
