
UV_LampBox.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000036a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000316  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000036a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000039c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000003dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f5a  00000000  00000000  00000424  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007ed  00000000  00000000  0000137e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000052d  00000000  00000000  00001b6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  00002098  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d6  00000000  00000000  000020f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000004c  00000000  00000000  000024c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00002512  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 cc 00 	call	0x198	; 0x198 <main>
  78:	0c 94 89 01 	jmp	0x312	; 0x312 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <put_Char_LCD_Display>:

#define MAX_CHARS_PER_ROW 16

void put_Char_LCD_Display(int ch, int type)
{
	PORTD = (PORTD&0x0F)|(ch&0xF0);
  80:	2b b1       	in	r18, 0x0b	; 11
  82:	38 2f       	mov	r19, r24
  84:	30 7f       	andi	r19, 0xF0	; 240
  86:	2f 70       	andi	r18, 0x0F	; 15
  88:	23 2b       	or	r18, r19
  8a:	2b b9       	out	0x0b, r18	; 11
	PORTD = (PORTD&0xFE)|(type&0x01);
  8c:	2b b1       	in	r18, 0x0b	; 11
  8e:	61 70       	andi	r22, 0x01	; 1
  90:	2e 7f       	andi	r18, 0xFE	; 254
  92:	26 2b       	or	r18, r22
  94:	2b b9       	out	0x0b, r18	; 11
	PORTD = PORTD|0x02;
  96:	59 9a       	sbi	0x0b, 1	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  98:	e1 ee       	ldi	r30, 0xE1	; 225
  9a:	f4 e0       	ldi	r31, 0x04	; 4
  9c:	31 97       	sbiw	r30, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <put_Char_LCD_Display+0x1c>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <put_Char_LCD_Display+0x22>
  a2:	00 00       	nop
	_delay_ms(5);
	PORTD &= 0xFC;
  a4:	2b b1       	in	r18, 0x0b	; 11
  a6:	2c 7f       	andi	r18, 0xFC	; 252
  a8:	2b b9       	out	0x0b, r18	; 11
	PORTD = (PORTD&0x0F)|((ch<<4)&0xF0);
  aa:	2b b1       	in	r18, 0x0b	; 11
  ac:	82 95       	swap	r24
  ae:	92 95       	swap	r25
  b0:	90 7f       	andi	r25, 0xF0	; 240
  b2:	98 27       	eor	r25, r24
  b4:	80 7f       	andi	r24, 0xF0	; 240
  b6:	98 27       	eor	r25, r24
  b8:	92 2f       	mov	r25, r18
  ba:	9f 70       	andi	r25, 0x0F	; 15
  bc:	89 2b       	or	r24, r25
  be:	8b b9       	out	0x0b, r24	; 11
	PORTD = (PORTD&0xFE)|(type&0x01);
  c0:	8b b1       	in	r24, 0x0b	; 11
  c2:	8e 7f       	andi	r24, 0xFE	; 254
  c4:	68 2b       	or	r22, r24
  c6:	6b b9       	out	0x0b, r22	; 11
	PORTD = PORTD|0x02;
  c8:	59 9a       	sbi	0x0b, 1	; 11
  ca:	81 ee       	ldi	r24, 0xE1	; 225
  cc:	94 e0       	ldi	r25, 0x04	; 4
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <put_Char_LCD_Display+0x4e>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <put_Char_LCD_Display+0x54>
  d4:	00 00       	nop
	_delay_ms(5);
	PORTD &= 0xFC;
  d6:	8b b1       	in	r24, 0x0b	; 11
  d8:	8c 7f       	andi	r24, 0xFC	; 252
  da:	8b b9       	out	0x0b, r24	; 11
  dc:	08 95       	ret

000000de <init_LCD_Display>:
}

void init_LCD_Display(void)
{
	DDRD = 0xFF;
  de:	8f ef       	ldi	r24, 0xFF	; 255
  e0:	8a b9       	out	0x0a, r24	; 10
	put_Char_LCD_Display(0x38,0);
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	88 e3       	ldi	r24, 0x38	; 56
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
  ee:	85 eb       	ldi	r24, 0xB5	; 181
  f0:	95 e3       	ldi	r25, 0x35	; 53
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <init_LCD_Display+0x14>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <init_LCD_Display+0x1a>
  f8:	00 00       	nop
	_delay_ms(55);
	put_Char_LCD_Display(0x38,0);
  fa:	60 e0       	ldi	r22, 0x00	; 0
  fc:	70 e0       	ldi	r23, 0x00	; 0
  fe:	88 e3       	ldi	r24, 0x38	; 56
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
 106:	85 eb       	ldi	r24, 0xB5	; 181
 108:	95 e3       	ldi	r25, 0x35	; 53
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <init_LCD_Display+0x2c>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <init_LCD_Display+0x32>
 110:	00 00       	nop
	_delay_ms(55);
	put_Char_LCD_Display(0x38,0);
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	88 e3       	ldi	r24, 0x38	; 56
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
 11e:	85 eb       	ldi	r24, 0xB5	; 181
 120:	95 e3       	ldi	r25, 0x35	; 53
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <init_LCD_Display+0x44>
 126:	00 c0       	rjmp	.+0      	; 0x128 <init_LCD_Display+0x4a>
 128:	00 00       	nop
	_delay_ms(55);
	put_Char_LCD_Display(0x02,0);
 12a:	60 e0       	ldi	r22, 0x00	; 0
 12c:	70 e0       	ldi	r23, 0x00	; 0
 12e:	82 e0       	ldi	r24, 0x02	; 2
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
 136:	85 eb       	ldi	r24, 0xB5	; 181
 138:	95 e3       	ldi	r25, 0x35	; 53
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <init_LCD_Display+0x5c>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <init_LCD_Display+0x62>
 140:	00 00       	nop
	_delay_ms(55);
	put_Char_LCD_Display(0x0C,0);
 142:	60 e0       	ldi	r22, 0x00	; 0
 144:	70 e0       	ldi	r23, 0x00	; 0
 146:	8c e0       	ldi	r24, 0x0C	; 12
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
 14e:	85 eb       	ldi	r24, 0xB5	; 181
 150:	95 e3       	ldi	r25, 0x35	; 53
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <init_LCD_Display+0x74>
 156:	00 c0       	rjmp	.+0      	; 0x158 <init_LCD_Display+0x7a>
 158:	00 00       	nop
	_delay_ms(55);
	put_Char_LCD_Display(0x01,0);
 15a:	60 e0       	ldi	r22, 0x00	; 0
 15c:	70 e0       	ldi	r23, 0x00	; 0
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
 166:	85 eb       	ldi	r24, 0xB5	; 181
 168:	95 e3       	ldi	r25, 0x35	; 53
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <init_LCD_Display+0x8c>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <init_LCD_Display+0x92>
 170:	00 00       	nop
	_delay_ms(55);
	put_Char_LCD_Display(0x80,0);
 172:	60 e0       	ldi	r22, 0x00	; 0
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	80 e8       	ldi	r24, 0x80	; 128
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
 17e:	85 eb       	ldi	r24, 0xB5	; 181
 180:	95 e3       	ldi	r25, 0x35	; 53
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <init_LCD_Display+0xa4>
 186:	00 c0       	rjmp	.+0      	; 0x188 <init_LCD_Display+0xaa>
 188:	00 00       	nop
	_delay_ms(55);
	put_Char_LCD_Display(0x01,0);//clear display
 18a:	60 e0       	ldi	r22, 0x00	; 0
 18c:	70 e0       	ldi	r23, 0x00	; 0
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
 196:	08 95       	ret

00000198 <main>:


int main(void)
{
    /* Replace with your application code */
	DDRC |= 1 << 0;
 198:	38 9a       	sbi	0x07, 0	; 7
	PORTC |= 1 << 0;
 19a:	40 9a       	sbi	0x08, 0	; 8
 19c:	8f e4       	ldi	r24, 0x4F	; 79
 19e:	93 ec       	ldi	r25, 0xC3	; 195
 1a0:	01 97       	sbiw	r24, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <main+0x8>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <main+0xe>
 1a6:	00 00       	nop
	_delay_ms(200);
	init_LCD_Display();
 1a8:	0e 94 6f 00 	call	0xde	; 0xde <init_LCD_Display>
 1ac:	8f e4       	ldi	r24, 0x4F	; 79
 1ae:	93 ec       	ldi	r25, 0xC3	; 195
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <main+0x18>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x1e>
 1b6:	00 00       	nop
	_delay_ms(200);
	put_Char_LCD_Display('t', 1);
 1b8:	61 e0       	ldi	r22, 0x01	; 1
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	84 e7       	ldi	r24, 0x74	; 116
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('e', 1);
 1c4:	61 e0       	ldi	r22, 0x01	; 1
 1c6:	70 e0       	ldi	r23, 0x00	; 0
 1c8:	85 e6       	ldi	r24, 0x65	; 101
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('s', 1);
 1d0:	61 e0       	ldi	r22, 0x01	; 1
 1d2:	70 e0       	ldi	r23, 0x00	; 0
 1d4:	83 e7       	ldi	r24, 0x73	; 115
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('t', 1);
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	84 e7       	ldi	r24, 0x74	; 116
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display(' ', 1);
 1e8:	61 e0       	ldi	r22, 0x01	; 1
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	80 e2       	ldi	r24, 0x20	; 32
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('t', 1);
 1f4:	61 e0       	ldi	r22, 0x01	; 1
 1f6:	70 e0       	ldi	r23, 0x00	; 0
 1f8:	84 e7       	ldi	r24, 0x74	; 116
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('e', 1);
 200:	61 e0       	ldi	r22, 0x01	; 1
 202:	70 e0       	ldi	r23, 0x00	; 0
 204:	85 e6       	ldi	r24, 0x65	; 101
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('s', 1);
 20c:	61 e0       	ldi	r22, 0x01	; 1
 20e:	70 e0       	ldi	r23, 0x00	; 0
 210:	83 e7       	ldi	r24, 0x73	; 115
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('t', 1);
 218:	61 e0       	ldi	r22, 0x01	; 1
 21a:	70 e0       	ldi	r23, 0x00	; 0
 21c:	84 e7       	ldi	r24, 0x74	; 116
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	
	put_Char_LCD_Display(0x80, 0);
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	70 e0       	ldi	r23, 0x00	; 0
 228:	80 e8       	ldi	r24, 0x80	; 128
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('S', 1);
 230:	61 e0       	ldi	r22, 0x01	; 1
 232:	70 e0       	ldi	r23, 0x00	; 0
 234:	83 e5       	ldi	r24, 0x53	; 83
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('c', 1);
 23c:	61 e0       	ldi	r22, 0x01	; 1
 23e:	70 e0       	ldi	r23, 0x00	; 0
 240:	83 e6       	ldi	r24, 0x63	; 99
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('o', 1);
 248:	61 e0       	ldi	r22, 0x01	; 1
 24a:	70 e0       	ldi	r23, 0x00	; 0
 24c:	8f e6       	ldi	r24, 0x6F	; 111
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('r', 1);
 254:	61 e0       	ldi	r22, 0x01	; 1
 256:	70 e0       	ldi	r23, 0x00	; 0
 258:	82 e7       	ldi	r24, 0x72	; 114
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('p', 1);
 260:	61 e0       	ldi	r22, 0x01	; 1
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	80 e7       	ldi	r24, 0x70	; 112
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('i', 1);
 26c:	61 e0       	ldi	r22, 0x01	; 1
 26e:	70 e0       	ldi	r23, 0x00	; 0
 270:	89 e6       	ldi	r24, 0x69	; 105
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('o', 1);
 278:	61 e0       	ldi	r22, 0x01	; 1
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	8f e6       	ldi	r24, 0x6F	; 111
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('n', 1);
 284:	61 e0       	ldi	r22, 0x01	; 1
 286:	70 e0       	ldi	r23, 0x00	; 0
 288:	8e e6       	ldi	r24, 0x6E	; 110
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('I', 1);
 290:	61 e0       	ldi	r22, 0x01	; 1
 292:	70 e0       	ldi	r23, 0x00	; 0
 294:	89 e4       	ldi	r24, 0x49	; 73
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('P', 1);
 29c:	61 e0       	ldi	r22, 0x01	; 1
 29e:	70 e0       	ldi	r23, 0x00	; 0
 2a0:	80 e5       	ldi	r24, 0x50	; 80
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('X', 1);
 2a8:	61 e0       	ldi	r22, 0x01	; 1
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	88 e5       	ldi	r24, 0x58	; 88
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	
	put_Char_LCD_Display(0xC0, 0);
 2b4:	60 e0       	ldi	r22, 0x00	; 0
 2b6:	70 e0       	ldi	r23, 0x00	; 0
 2b8:	80 ec       	ldi	r24, 0xC0	; 192
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('I', 1);
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	70 e0       	ldi	r23, 0x00	; 0
 2c4:	89 e4       	ldi	r24, 0x49	; 73
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('P', 1);
 2cc:	61 e0       	ldi	r22, 0x01	; 1
 2ce:	70 e0       	ldi	r23, 0x00	; 0
 2d0:	80 e5       	ldi	r24, 0x50	; 80
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
	put_Char_LCD_Display('X', 1);
 2d8:	61 e0       	ldi	r22, 0x01	; 1
 2da:	70 e0       	ldi	r23, 0x00	; 0
 2dc:	88 e5       	ldi	r24, 0x58	; 88
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 40 00 	call	0x80	; 0x80 <put_Char_LCD_Display>
 2e4:	9f e3       	ldi	r25, 0x3F	; 63
 2e6:	2d e0       	ldi	r18, 0x0D	; 13
 2e8:	33 e0       	ldi	r19, 0x03	; 3
 2ea:	91 50       	subi	r25, 0x01	; 1
 2ec:	20 40       	sbci	r18, 0x00	; 0
 2ee:	30 40       	sbci	r19, 0x00	; 0
 2f0:	e1 f7       	brne	.-8      	; 0x2ea <main+0x152>
 2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <main+0x15c>
 2f4:	00 00       	nop
	
	_delay_ms(1000);
    while (1) 
    {
		_delay_ms(500);
		PORTC ^= 1 << 0;
 2f6:	91 e0       	ldi	r25, 0x01	; 1
 2f8:	8f e9       	ldi	r24, 0x9F	; 159
 2fa:	26 e8       	ldi	r18, 0x86	; 134
 2fc:	31 e0       	ldi	r19, 0x01	; 1
 2fe:	81 50       	subi	r24, 0x01	; 1
 300:	20 40       	sbci	r18, 0x00	; 0
 302:	30 40       	sbci	r19, 0x00	; 0
 304:	e1 f7       	brne	.-8      	; 0x2fe <main+0x166>
 306:	00 c0       	rjmp	.+0      	; 0x308 <main+0x170>
 308:	00 00       	nop
 30a:	88 b1       	in	r24, 0x08	; 8
 30c:	89 27       	eor	r24, r25
 30e:	88 b9       	out	0x08, r24	; 8
		
    }
 310:	f3 cf       	rjmp	.-26     	; 0x2f8 <main+0x160>

00000312 <_exit>:
 312:	f8 94       	cli

00000314 <__stop_program>:
 314:	ff cf       	rjmp	.-2      	; 0x314 <__stop_program>
